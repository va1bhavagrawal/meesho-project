/home2/vaibhav19ada/miniconda3/envs/contwords/lib/python3.9/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
Updating cross attention only!
['CrossAttnDownBlock2D', 'Attention', 'Attention', 'GEGLU', 'Attention', 'Attention', 'GEGLU', 'CrossAttnDownBlock2D', 'Attention', 'Attention', 'GEGLU', 'Attention', 'Attention', 'GEGLU', 'CrossAttnDownBlock2D', 'Attention', 'Attention', 'GEGLU', 'Attention', 'Attention', 'GEGLU', 'CrossAttnUpBlock2D', 'Attention', 'Attention', 'GEGLU', 'Attention', 'Attention', 'GEGLU', 'Attention', 'Attention', 'GEGLU', 'CrossAttnUpBlock2D', 'Attention', 'Attention', 'GEGLU', 'Attention', 'Attention', 'GEGLU', 'Attention', 'Attention', 'GEGLU', 'CrossAttnUpBlock2D', 'Attention', 'Attention', 'GEGLU', 'Attention', 'Attention', 'GEGLU', 'Attention', 'Attention', 'GEGLU', 'UNetMidBlock2DCrossAttn', 'Attention', 'Attention', 'GEGLU']
Differences: 0
Updating cross attention only!
['CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention', 'CLIPAttention']
Differences: 0
Length of images used for training 180
The current continuous MLP: continuous_word_mlp(
  (fc1): Linear(in_features=2, out_features=20, bias=True)
  (fc2): Linear(in_features=20, out_features=1024, bias=True)
  (relu): ReLU()
  (tanh): Tanh()
)
/home2/vaibhav19ada/miniconda3/envs/contwords/lib/python3.9/site-packages/diffusers/configuration_utils.py:215: FutureWarning: It is deprecated to pass a pretrained model name or path to `from_config`.If you were trying to load a scheduler, please use <class 'diffusers.schedulers.scheduling_ddpm.DDPMScheduler'>.from_pretrained(...) instead. Otherwise, please make sure to pass a configuration dictionary instead. This functionality will be removed in v1.0.0.
  deprecate("config-passed-as-path", "1.0.0", deprecation_message, standard_warn=False)
Steps:   0%|                                                                                                                         | 0/30000 [00:00<?, ?it/s]
Stage 1 training: Disentangling object identity first

Steps:   0%|                                                              | 8/30000 [00:05<5:21:49,  1.55it/s, loss=tensor(0.5829, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 12/30000 [00:07<4:37:43,  1.80it/s, loss=tensor(0.6232, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 16/30000 [00:09<4:16:43,  1.95it/s, loss=tensor(0.4130, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 20/30000 [00:10<4:05:03,  2.04it/s, loss=tensor(0.5639, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 24/30000 [00:12<3:58:04,  2.10it/s, loss=tensor(0.6380, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 28/30000 [00:14<3:53:54,  2.14it/s, loss=tensor(0.5167, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 32/30000 [00:16<3:51:01,  2.16it/s, loss=tensor(0.6785, device='cuda:0'), lr=0.0004]
Stage 1 training: Disentangling object identity first

Steps:   0%|                                                             | 36/30000 [00:18<3:49:31,  2.18it/s, loss=tensor(0.6080, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 40/30000 [00:19<3:48:54,  2.18it/s, loss=tensor(0.5699, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 48/30000 [00:23<3:47:12,  2.20it/s, loss=tensor(0.5227, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 52/30000 [00:25<3:48:45,  2.18it/s, loss=tensor(0.5917, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 56/30000 [00:27<3:48:06,  2.19it/s, loss=tensor(0.4933, device='cuda:0'), lr=0.0004]

Steps:   0%|                                                             | 60/30000 [00:29<3:47:05,  2.20it/s, loss=tensor(0.5495, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                            | 64/30000 [00:30<3:46:28,  2.20it/s, loss=tensor(0.5820, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                            | 68/30000 [00:32<3:46:29,  2.20it/s, loss=tensor(0.5254, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                            | 72/30000 [00:34<3:46:19,  2.20it/s, loss=tensor(0.5353, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                            | 76/30000 [00:36<3:45:56,  2.21it/s, loss=tensor(0.6750, device='cuda:0'), lr=0.0004]
Stage 1 training: Disentangling object identity first

Steps:   0%|▏                                                            | 80/30000 [00:38<3:46:17,  2.20it/s, loss=tensor(0.7871, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                            | 84/30000 [00:39<3:45:48,  2.21it/s, loss=tensor(0.7661, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                            | 92/30000 [00:43<3:45:58,  2.21it/s, loss=tensor(0.5322, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                            | 96/30000 [00:45<3:45:42,  2.21it/s, loss=tensor(0.6821, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                           | 100/30000 [00:47<3:45:11,  2.21it/s, loss=tensor(0.5941, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                           | 104/30000 [00:48<3:45:22,  2.21it/s, loss=tensor(0.7218, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                           | 108/30000 [00:50<3:45:38,  2.21it/s, loss=tensor(0.6082, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                           | 112/30000 [00:52<3:45:50,  2.21it/s, loss=tensor(0.5721, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                           | 116/30000 [00:54<3:46:00,  2.20it/s, loss=tensor(0.6163, device='cuda:0'), lr=0.0004]
Stage 1 training: Disentangling object identity first

Steps:   0%|▏                                                           | 120/30000 [00:56<3:46:36,  2.20it/s, loss=tensor(0.4608, device='cuda:0'), lr=0.0004]

Steps:   0%|▏                                                           | 124/30000 [00:58<3:46:17,  2.20it/s, loss=tensor(0.5525, device='cuda:0'), lr=0.0004]

Steps:   0%|▎                                                           | 132/30000 [01:01<3:46:13,  2.20it/s, loss=tensor(0.6175, device='cuda:0'), lr=0.0004]

Steps:   0%|▎                                                           | 136/30000 [01:03<3:45:38,  2.21it/s, loss=tensor(0.6071, device='cuda:0'), lr=0.0004]

Steps:   0%|▎                                                           | 140/30000 [01:05<3:46:40,  2.20it/s, loss=tensor(0.6118, device='cuda:0'), lr=0.0004]

Steps:   0%|▎                                                           | 144/30000 [01:07<3:46:46,  2.19it/s, loss=tensor(0.6682, device='cuda:0'), lr=0.0004]

Steps:   0%|▎                                                           | 148/30000 [01:08<3:46:58,  2.19it/s, loss=tensor(0.6453, device='cuda:0'), lr=0.0004]

Steps:   1%|▎                                                           | 152/30000 [01:10<3:47:29,  2.19it/s, loss=tensor(0.5991, device='cuda:0'), lr=0.0004]

Steps:   1%|▎                                                           | 156/30000 [01:12<3:47:48,  2.18it/s, loss=tensor(0.5313, device='cuda:0'), lr=0.0004]

Steps:   1%|▎                                                           | 160/30000 [01:14<3:47:19,  2.19it/s, loss=tensor(0.6304, device='cuda:0'), lr=0.0004]
Stage 1 training: Disentangling object identity first

Steps:   1%|▎                                                           | 164/30000 [01:16<3:47:12,  2.19it/s, loss=tensor(0.6313, device='cuda:0'), lr=0.0004]

Steps:   1%|▎                                                           | 168/30000 [01:18<3:47:01,  2.19it/s, loss=tensor(0.7125, device='cuda:0'), lr=0.0004]

Steps:   1%|▎                                                           | 172/30000 [01:19<3:47:17,  2.19it/s, loss=tensor(0.6375, device='cuda:0'), lr=0.0004]

Steps:   1%|▎                                                           | 180/30000 [01:23<3:50:51,  2.15it/s, loss=tensor(0.4925, device='cuda:0'), lr=0.0004]

Steps:   1%|▎                                                           | 180/30000 [01:23<3:50:51,  2.15it/s, loss=tensor(0.6806, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 188/30000 [01:27<3:56:12,  2.10it/s, loss=tensor(0.4606, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 192/30000 [01:29<3:53:41,  2.13it/s, loss=tensor(0.5798, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 196/30000 [01:31<3:52:02,  2.14it/s, loss=tensor(0.7227, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 200/30000 [01:33<3:50:29,  2.15it/s, loss=tensor(0.3772, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 204/30000 [01:34<3:49:24,  2.16it/s, loss=tensor(0.7111, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 208/30000 [01:36<3:48:29,  2.17it/s, loss=tensor(0.4813, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 212/30000 [01:38<3:48:32,  2.17it/s, loss=tensor(0.5654, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 216/30000 [01:40<3:47:35,  2.18it/s, loss=tensor(0.4427, device='cuda:0'), lr=0.0004]
Stage 1 training: Disentangling object identity first

Steps:   1%|▍                                                           | 220/30000 [01:42<3:47:57,  2.18it/s, loss=tensor(0.5318, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 224/30000 [01:44<3:47:40,  2.18it/s, loss=tensor(0.5366, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 228/30000 [01:45<3:47:39,  2.18it/s, loss=tensor(0.7131, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 236/30000 [01:49<3:47:51,  2.18it/s, loss=tensor(0.6951, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 240/30000 [01:51<3:47:54,  2.18it/s, loss=tensor(0.5713, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 244/30000 [01:53<3:47:24,  2.18it/s, loss=tensor(0.5998, device='cuda:0'), lr=0.0004]

Steps:   1%|▍                                                           | 248/30000 [01:55<3:47:26,  2.18it/s, loss=tensor(0.8272, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 252/30000 [01:56<3:47:18,  2.18it/s, loss=tensor(0.6110, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 256/30000 [01:58<3:46:50,  2.19it/s, loss=tensor(0.5136, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 260/30000 [02:00<3:46:48,  2.19it/s, loss=tensor(0.6373, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 264/30000 [02:02<3:46:47,  2.19it/s, loss=tensor(0.5555, device='cuda:0'), lr=0.0004]
Stage 1 training: Disentangling object identity first

Steps:   1%|▌                                                           | 268/30000 [02:04<3:46:36,  2.19it/s, loss=tensor(0.5567, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 272/30000 [02:06<3:47:16,  2.18it/s, loss=tensor(0.5119, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 280/30000 [02:09<3:46:49,  2.18it/s, loss=tensor(0.5025, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 284/30000 [02:11<3:47:10,  2.18it/s, loss=tensor(0.6019, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 288/30000 [02:13<3:47:11,  2.18it/s, loss=tensor(0.4466, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 292/30000 [02:15<3:47:22,  2.18it/s, loss=tensor(0.4790, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 296/30000 [02:17<3:47:12,  2.18it/s, loss=tensor(0.5149, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 300/30000 [02:18<3:47:04,  2.18it/s, loss=tensor(0.5991, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 304/30000 [02:20<3:47:32,  2.18it/s, loss=tensor(0.6358, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 308/30000 [02:22<3:47:34,  2.17it/s, loss=tensor(0.7673, device='cuda:0'), lr=0.0004]

Steps:   1%|▌                                                           | 312/30000 [02:24<3:47:35,  2.17it/s, loss=tensor(0.6028, device='cuda:0'), lr=0.0004]
Stage 1 training: Disentangling object identity first

Steps:   1%|▋                                                           | 316/30000 [02:26<3:48:22,  2.17it/s, loss=tensor(0.6429, device='cuda:0'), lr=0.0004]

Steps:   1%|▋                                                           | 320/30000 [02:28<3:48:02,  2.17it/s, loss=tensor(0.5335, device='cuda:0'), lr=0.0004]

Steps:   1%|▋                                                           | 328/30000 [02:31<3:47:58,  2.17it/s, loss=tensor(0.5981, device='cuda:0'), lr=0.0004]

Steps:   1%|▋                                                           | 332/30000 [02:33<3:47:45,  2.17it/s, loss=tensor(0.6838, device='cuda:0'), lr=0.0004]

Steps:   1%|▋                                                           | 336/30000 [02:35<3:47:26,  2.17it/s, loss=tensor(0.6782, device='cuda:0'), lr=0.0004]

Steps:   1%|▋                                                           | 340/30000 [02:37<3:47:15,  2.18it/s, loss=tensor(0.4853, device='cuda:0'), lr=0.0004]

Steps:   1%|▋                                                           | 344/30000 [02:39<3:46:55,  2.18it/s, loss=tensor(0.5761, device='cuda:0'), lr=0.0004]

Steps:   1%|▋                                                           | 348/30000 [02:41<3:47:12,  2.18it/s, loss=tensor(0.5048, device='cuda:0'), lr=0.0004]
Steps:   1%|▋                                                           | 348/30000 [02:41<3:47:12,  2.18it/s, loss=tensor(0.5048, device='cuda:0'), lr=0.0004]Traceback (most recent call last):
  File "/home2/vaibhav19ada/vaibhav/training_scripts/train.py", line 1341, in <module>
    main(args, controlnet_prompts)
  File "/home2/vaibhav19ada/vaibhav/training_scripts/train.py", line 1069, in main
    accelerator.backward(loss)
  File "/home2/vaibhav19ada/miniconda3/envs/contwords/lib/python3.9/site-packages/accelerate/accelerator.py", line 1683, in backward
    loss.backward(**kwargs)
  File "/home2/vaibhav19ada/miniconda3/envs/contwords/lib/python3.9/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home2/vaibhav19ada/miniconda3/envs/contwords/lib/python3.9/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt